gitops-runtime:
  cf-argocd-extras:
    enabled: true
  argo-cd:
    notifications:
      enabled: true
      logLevel: "debug"
      cm:
        create: true
        name: argocd-notifications-cm
      secret:
        create: false
      metrics:
      # -- Enables prometheus metrics server
        enabled: true
      notifiers:
        service.grafana: |
          apiURL: https://grafana-prod.cs.sandbox.codefresh.io/api
          apiKey: $grafana-api-key
        service.slack: |
          token: $slack-token
      triggers:
        trigger.on-sync-succeeded: |
          - description: Application syncing has succeeded
            oncePer: app.status.operationState?.syncResult?.revision
            when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded']
            send:
            - app-synced
      templates:
        template.app-synced: |
          slack:
            attachments: |
              [{
                "title": "{{ .app.metadata.name}}",
                "title_link":"{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": "#18be52",
                "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                },
                {
                  "title": {{- if .app.spec.source }} "Repository" {{- else if .app.spec.sources }} "Repositories" {{- end }},
                  "value": {{- if .app.spec.source }} ":arrow_heading_up: {{ .app.spec.source.repoURL }}" {{- else if .app.spec.sources }} "{{- range $index, $source := .app.spec.sources }}{{ if $index }}\n{{ end }}:arrow_heading_up: {{ $source.repoURL }}{{- end }}" {{- end }},
                  "short": true
                }
                {{range $index, $c := .app.status.conditions}}
                ,
                {
                  "title": "{{$c.type}}",
                  "value": "{{$c.message}}",
                  "short": true
                }
                {{end}}
                ]
              }]
            deliveryPolicy: Post
            groupingKey: ""
            notifyBroadcast: false

    apiVersionOverrides:
      monitoring.coreos.com: v1
    configs:
      cm:
        application.resourceTrackingMethod: "annotation+label"

    server:
      metrics:
        enabled: true
    applicationSet:
      metrics:
        enabled: true
    controller:
      metrics:
        enabled: true
    repoServer:
      metrics:
        enabled: true

    acrController:
      enabled: true
    eventReporter:
      env:
        - name: USE_GRPC
          value: 'false'
      replicas: 4
    server:
      replicas: 2
      resources:
        requests:
          cpu: '0.3'
          memory: 400Mi
  global:
    codefresh:
      accountId: 641dfab29939b208915c0d4e
      userToken:
        secretKeyRef:
          name: codefresh-user-token
          key: token
    runtime:
      ingress:
        className: nginx-public
        enabled: false
      isConfigurationRuntime: false
      name: high
  installer:
    skipValidation: false

  argo-workflows:
    controller:
      workflowDefaults:
        spec:
          archiveLogs: true
          artifactRepositoryRef:
            configMap: codefresh-workflows-log-store
            key: codefresh-workflows-log-store
    artifactRepositoryRef:
      codefresh-workflows-log-store:
        archiveLogs: true
        codefresh-workflows-log-store:
          s3:
            bucket: 641dfab29939b208915c0d4e
            endpoint: gitops-workflow-logs.codefresh.io
            insecure: false
            keyFormat: high/{{workflow.name}}/{{pod.name}}
            accessKeySecret:
              name: codefresh-token
              key: token
            secretKeySecret:
              name: codefresh-token
              key: token
